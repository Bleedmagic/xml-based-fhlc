<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified"
  xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:element name="users">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" name="user">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="username" type="xs:string" />
              <xs:element name="email" type="xs:string" />
              <xs:element name="password" type="xs:string" />
              <xs:element name="role" type="xs:string" />
              <xs:element name="first_name" type="xs:string" />
              <xs:element name="middle_name" type="xs:string" minOccurs="1" nillable="true" />
              <xs:element name="last_name" type="xs:string" />
              <xs:element name="phone_number" type="xs:string" minOccurs="1" nillable="true" />
              <xs:element name="age" type="xs:unsignedByte" />
              <xs:element name="address" type="xs:string" minOccurs="1" nillable="true" />
              <xs:element name="picture" type="xs:string" />
              <xs:element name="student" type="xs:string" minOccurs="1" nillable="true" />
            </xs:sequence>

            <!-- Assertions -->
            <xs:assert test="role = ('admin', 'guardian')" />
            <xs:assert test="matches(email, '^[\w\.-]+@[\w\.-]+\.[a-zA-Z]{2,}$')" />
            <xs:assert test="age >= 18 and age &lt;= 120" />
            <xs:assert test="string(phone_number) = '' or matches(phone_number, '^\d{11}$')" />
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>
